apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: backend
  template:
    metadata:
      labels:
        tier: backend
    spec:
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
          - key: config
            path: site.conf 
      - name: static-assets
        emptyDir: {}
      - name: images-volume
        persistentVolumeClaim:
          claimName: images-pvc
      imagePullSecrets:
      - name: dockerhub-secret
      containers:
      - name: php
        image: allefebv/cloud-1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: static-assets
          mountPath: "/assets-copy"
        - name: images-volume
          mountPath: "/code/userImages/"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp -r /code/public/* /assets-copy/"]
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: static-assets
          mountPath: /code/public/

---

apiVersion: v1
kind: Service
metadata:
  name: app-service
  labels:
    tier: backend
spec:
  selector:
    tier: backend
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30000