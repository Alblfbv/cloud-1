- name: Create kubernetes cluster with kubeadm tool
  become: yes
  command:
    cmd: kubeadm init --ignore-preflight-errors=all --apiserver-advertise-address="{{ node_ip }}" --cri-socket /run/containerd/containerd.sock --apiserver-cert-extra-sans="{{ node_ip }}"  --node-name="{{ node_name }}" --pod-network-cidr={{ pod_network }}

- name: Creating .kube directory
  ansible.builtin.file:
    path: $HOME/.kube/
    state: directory
    mode: 0755

- name: Configuring users cluster access
  become: yes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    remote_src: yes
    owner: vagrant

- name: Install pip3 for next task
  become: yes
  ansible.builtin.apt:
    name: python3-pip
    state: present
    update_cache: yes


- name: Install OpenShift for Ansible k8s manipulations
  become: yes
  pip:
    executable: pip3
    name: openshift
    state: present

- name: Install CNI (flannel) for pod networking
  import_tasks: networking.yaml

- name: Install Metallb - Step1
  ansible.builtin.command:
    argv:
      - kubectl
      - apply
      - -f
      - https://raw.githubusercontent.com/metallb/metallb/v0.9.6/manifests/namespace.yaml

- name: Install Metallb - Step2
  ansible.builtin.command:
    argv:
      - kubectl
      - apply
      - -f
      - https://raw.githubusercontent.com/metallb/metallb/v0.9.6/manifests/metallb.yaml

- name: Install Metallb - Step3
  ansible.builtin.command:
    argv:
      - kubectl
      - create
      - secret
      - generic
      - -n
      - metallb-system
      - memberlist
      - --from-literal=secretkey="$(openssl rand -base64 128)"

- name: Add helm_key
  become: yes
  ansible.builtin.apt_key:
    url: https://baltocdn.com/helm/signing.asc
    state: present

- name: Add helm apt repository
  become: yes
  ansible.builtin.apt_repository:
    repo: deb https://baltocdn.com/helm/stable/debian/ all main
    state: present

- name: Install Helm
  become: yes
  ansible.builtin.apt:
    name: helm
    state: present
    update_cache: yes

- name: Install ingress-controller
  become: yes
  community.kubernetes.helm:
    name: myingress
    chart_ref: ingress-nginx/ingress-nginx
    release_namespace: ingress-nginx
    values:
      kind: DaemonSet
      hostNetwork: true
      hostPort:
        enabled: true

- name: Generate join command
  become: yes
  ansible.builtin.command:
    argv:
      - kubeadm
      - token
      - create
      - --print-join-command
  register: join_command_raw

- name: Set join command
  set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"